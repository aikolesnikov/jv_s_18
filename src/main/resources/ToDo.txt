2.

Задание на классы
2.1. Напишите консольное приложение, которое:
 описывает интерфейс Drawable с методом построения фигуры draw();
 описывает абстрактный класс Shape, реализующий интерфейс
Drawable и содержащий поле shapeColor типа String для цвета фигуры
и конструктор для его инициализации, абстрактный метод вычисления
площади фигуры calcArea() и переопределенный метод toString();
 описывает классы Rectangle, Triangle, Circle, которые наследуются от
класса Shape и реализуют метод calcArea(), а также переопределяют
метод toString();
 создает набор данных типа Shape (массив размерностью не меньше 10
элементов);
 обрабатывает массив:
− отображает набор данных;
− вычисляет суммарную площадь всех фигур набора данных;
− вычисляет суммарную площадь фигур заданного вида;
− упорядочивает набор данных по увеличению площади фигур,
используя объект интерфейса Comparator;
− упорядочивает набор данных по цвету фигур, используя объект
интерфейса Comparator.

ТРЕБОВАНИЯ.
1. Приложение должно быть написано на языке Java.
2. Использовать только стандартные компиляторы и библиотеки.
3. При кодировании должны быть использованы соглашения об
оформлении кода для языка Java.
4. Значения для инициализации объектов выбираются из заранее
подготовленных данных (выбранных случайным образом или по
порядку следования).
5. При построении приложения использовать архитектурный шаблон
MVC.

-------------------------------------------------------------------------------

3.

Пройти Games, tutorials:
1) https://www.git-game.com/
2) http://learngitbranching.js.org/

Просмотреть Youtube videos:
 Must have :
https://www.youtube.com/playlist?list=PLmRNNqEA7JoM77hOJkPrLOfJQGizCLR3P
 Additional :
https://www.youtube.com/playlist?list=PLoonZ8wII66iUm84o7nadL-oqINzBLk5g

HomeWork_9 [Maven]

1. Create project with 2 types of test - ITest and simple test. Configure maven
to run build without ITests. Create profile to run build with ITests, only
ITests. Use maven properties to configure ITest name convention.


-------------------------------------------------------------------------------

4.

Создать программу обработки текста учебника по программированию с использованием классов:
Символ, Слово, Предложение, Знак препинания и др. Во всех задачах с формированием текста заменять табуляции и
последовательности пробелов одним пробелом.
1. Найти наибольшее количество предложений текста, в которых есть одинаковые слова.
2. Вывести все предложения заданного текста в порядке возрастания количества слов в каждом из них.
3. Найти такое слово в первом предложении, которого нет ни в одном из остальных предложений.
4. Во всех вопросительных предложениях текста найти и напечатать без повторений слова заданной длины.
5. В каждом предложении текста поменять местами первое слово с последним, не изменяя длины предложения.
6. Напечатать слова текста в алфавитном порядке по первой букве. Слова, начинающиеся с новой буквы, печатать с красной строки.
7. Рассортировать слова текста по возрастанию доли гласных букв (отношение количества гласных к общему количеству букв в слове).
8. Слова текста, начинающиеся с гласных букв, рассортировать в алфавитном порядке по первой согласной букве слова.
9. Все слова текста рассортировать по возрастанию количества заданной буквы в слове. Слова с одинаковым количеством расположить в
алфавитном порядке.
10. Существует текст и список слов. Для каждого слова из заданного списка найти, сколько раз оно встречается в каждом предложении, и
рассортировать слова по убыванию общего количества вхождений.
11. В каждом предложении текста исключить подстроку максимальной длины, начинающуюся и заканчивающуюся заданными символами.
12. Из текста удалить все слова заданной длины, начинающиеся на согласную букву.
13. Отсортировать слова в тексте по убыванию количества вхождений заданного символа, а в случае равенства – по алфавиту.
14. В заданном тексте найти подстроку максимальной длины, являющуюся палиндромом, т.е. читающуюся слева направо и справа налево
одинаково.
15. Преобразовать каждое слово в тексте, удалив из него все последующие (предыдущие) вхождения первой (последней) буквы этого слова.
16. В некотором предложении текста слова заданной длины заменить указанной подстрокой, длина которой может не совпадать с длиной слова.
-------------------------------------------------------------------------------


5.

Выполнить задание реализуя собственные обработчики исключений и исключения.
Создать консольное приложение, удовлетворяющее следующим требованиям:
1. Использовать возможности ООП: классы, наследование, полиморфизм, инкапсуляция.
2. Каждый класс должен иметь исчерпывающее смысл название и информативный состав.
3. Наследование должно применяться только тогда, когда это имеет смысл.
4. При кодировании должны быть использованы соглашения об оформлении кода java code convention.
5. Классы должны быть грамотно разложены по пакетам.
6. Работа с консолью или консольное меню должно быть минимальным.
7. Для хранения параметров инициализации можно использовать файлы.

1. Цветочница. Определить иерархию цветов. Создать несколько объектов-цветов. Собрать букет с определением его стоимости.
2. Новогодний подарок. Определить иерархию конфет и прочих сладостей. Создать несколько объектов-конфет. Собрать детский подарок с определением его веса. Провести сортировку конфет в подарке на основе одного из параметров. Найти конфету в подарке, соответствующую заданному диапазону параметров.
3. Домашние электроприборы. Определить иерархию электроприборов. Включить некоторые в розетку. Посчитать потребляемую.мощность Провести сортировку приборов в квартире на основе одного из параметров. Найти прибор в квартире, соответствующий заданному диапазону параметров.
4. Шеф-повар. Определить иерархию овощей. Сделать салат. Посчитать калорийность. Провести сортировку овощей для салата на основе одного из параметров. Найти овощи в салате, соответствующие заданному диапазону параметров.
5. Звукозапись. Определить иерархию музыкальных композиций. Записать на диск сборку. Посчитать продолжительность. Провести перестановку композиций диска на основе одного из параметров. Найти композицию, соответствующую заданному диапазону параметров.
6. Камни. Определить иерархию драгоценных и полудрагоценных камней. Отобрать камни для ожерелья. Посчитать общий вес (в каратах) и стоимость. Провести сортировку камней ожерелья на основе одного из параметров. Найти камни в ожерелье, соответствующие заданному диапазону параметров.
7. Рыцарь. Определить иерархию амуниции рыцаря. Экипировать рыцаря. Посчитать стоимость. Провести сортировку амуниции на основе одного из параметров. Найти элементы амуниции, соответствующие заданному диапазону параметров.
8. Транспорт. Определить иерархию подвижного состава железнодорожного транспорта. Создать пассажирский поезд. Посчитать общую численность пассажиров и багажа. Провести сортировку вагонов поезда на основе одного из параметров. Найти вагоны в поезде, соответствующие заданному диапазону параметров.
9. Авиакомпания. Определить иерархию самолетов. Создать авиакомпанию. Посчитать общую вместимость и грузоподъемность. Провести сортировку самолетов компании по дальности полета. Найти самолет в компании, соответствующий заданному диапазону параметров.
10. Таксопарк. Определить иерархию легковых автомобилей. Создать таксопарк. Посчитать стоимость автопарка. Провести сортировку автомобилей парка по расходу топлива. Найти автомобиль в компании, соответствующий заданному диапазону параметров.
11. Страхование. Определить иерархию страховых обязательств. Собрать из обязательств дериватив. Посчитать стоимость. Провести сортировку обязательств в деривативе на основе уменьшения степени риска. Найти обязательство в дериватив, соответствующее заданному диапазону параметров.
12. Мобильная связь. Определить иерархию тарифов мобильной компании. Создать список тарифов компании. Посчитать общую численность клиентов. Провести сортировку тарифов на основе одного из параметров. Найти тариф в компании, соответствующий заданному диапазону параметров.
13. Фургон кофе. Загрузить фургон определенного объема грузом на определенную сумму из различных сортов кофе, находящихся в тому же в разных физических состояниях (зерно, молотый, растворимый в банках и пакетиках). Учитывать объем кофе вместе с упаковкой. Провести сортировку товаров на основе одного из параметров. Найти товар в фургоне, соответствующий заданному диапазону параметров.
14. Игровая комната. Подготовить игровую комнату для детей разных возрастных групп. Игрушек должно быть фиксированное количество в пределах выделенной суммы денег. Должны встречаться игрушки родственных групп, н-р: маленькие, средние и большие машины, куклы, мячи, кубики. Провести сортировку игрушек в  комнате по одному из параметров. Найти игрушки в комнате, соответствующие заданному диапазону параметров.
15. Налоги. Определить множество и сумму налоговых выплат физического лица за год с учетом доходов с основного и дополнительного мест работы, авторских вознаграждений, продажи имущества, получения в подарок денежных сумм и имущества, переводов из-за границы, льгот на детей и материальную помощь. Провести сортировку налогов по сумме.
16. Вклады. Сформировать набор предложений клиенту по вкладам различных банков для оптимального выбора. Учитывать возможность досрочного снятия кредита и\или пополнения. Реализовать поиск и сортировку вкладов.
17. Туристические путевки. Сформировать набор предложений клиенту по выбору туристической путевки различного типа (отдых, экскурсии, лечение, шопинг, круиз и т д) для оптимального выбора. Учитывать возможность выбора транспорта, питания и числа дней. Реализовать выбор и сортировку путевок.
18. Кредиты. Сформировать набор предложений клиенту по целевым кредитам различных банков для оптимального выбора. Учитывать возможность досрочного погашения кредита и\или увеличения кредитной линии. Реализовать выбор и поиск кредита.


-------------------------------------------------------------------------------

6.

1. Реализовать красно-черное дерево
2. Реализовать AVL дерево.
3. Реализовать хеш-таблицу
4. Реализовать циклический двухсвязный список
-------------------------------------------------------------------------------
